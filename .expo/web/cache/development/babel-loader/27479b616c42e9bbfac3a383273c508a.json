{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function UploadImage() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var addImage = function addImage() {};\n\n  return _jsxs(View, {\n    style: imageUploaderStyles.container,\n    children: [image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 200,\n        height: 200\n      }\n    }), _jsx(View, {\n      style: imageUploaderStyles.uploadBtnContainer,\n      children: _jsxs(TouchableOpacity, {\n        onPress: addImage,\n        style: imageUploaderStyles.uploadBtn,\n        children: [_jsxs(Text, {\n          children: [image ? 'Edit' : 'Upload', \" Image\"]\n        }), _jsx(AntDesign, {\n          name: \"camera\",\n          size: 20,\n          color: \"black\"\n        })]\n      })\n    })]\n  });\n}\nvar imageUploaderStyles = StyleSheet.create({\n  container: {\n    elevation: 2,\n    height: 200,\n    width: 200,\n    backgroundColor: '#efefef',\n    position: 'relative',\n    borderRadius: 999,\n    overflow: 'hidden'\n  },\n  uploadBtnContainer: {\n    opacity: 0.7,\n    position: 'absolute',\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'lightgrey',\n    width: '100%',\n    height: '25%'\n  },\n  uploadBtn: {\n    display: 'flex',\n    alignItems: \"center\",\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","AntDesign","UploadImage","image","setImage","addImage","imageUploaderStyles","container","uri","width","height","uploadBtnContainer","uploadBtn","StyleSheet","create","elevation","backgroundColor","position","borderRadius","overflow","opacity","right","bottom","display","alignItems","justifyContent"],"sources":["C:/Users/German/recetas-front/src/components/UploadImage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Image, View, Platform, TouchableOpacity, Text, StyleSheet } from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\nexport default function UploadImage() {\r\n const [image, setImage] = useState(null);\r\n const addImage=()=>{};\r\n\r\n return (\r\n<View style={imageUploaderStyles.container}>\r\n               {\r\n                   image  &&<Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\r\n               }\r\n\r\n<View style={imageUploaderStyles.uploadBtnContainer}>\r\n<TouchableOpacity onPress={addImage} style={imageUploaderStyles.uploadBtn} >\r\n<Text>{image ? 'Edit' : 'Upload'} Image</Text>\r\n<AntDesign name=\"camera\" size={20} color=\"black\" />\r\n</TouchableOpacity>\r\n</View>\r\n\r\n\r\n</View>\r\n\r\n );\r\n}\r\n\r\nconst imageUploaderStyles=StyleSheet.create({\r\n   container:{\r\n       elevation:2,\r\n       height:200,\r\n       width:200,\r\n       backgroundColor:'#efefef',\r\n       position:'relative',\r\n       borderRadius:999,\r\n       overflow:'hidden',\r\n   },\r\n   uploadBtnContainer:{\r\n       opacity:0.7,\r\n       position:'absolute',\r\n       right:0,\r\n       bottom:0,\r\n       backgroundColor:'lightgrey',\r\n       width:'100%',\r\n       height:'25%',\r\n   },\r\n   uploadBtn:{\r\n       display:'flex',\r\n       alignItems:\"center\",\r\n       justifyContent:'center'\r\n   }\r\n})"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAEA,SAASC,SAAT,QAA0B,oBAA1B;;;AAEA,eAAe,SAASC,WAAT,GAAuB;EACrC,gBAA0BH,QAAQ,CAAC,IAAD,CAAlC;EAAA;EAAA,IAAOI,KAAP;EAAA,IAAcC,QAAd;;EACA,IAAMC,QAAQ,GAAC,SAATA,QAAS,GAAI,CAAE,CAArB;;EAEA,OACD,MAAC,IAAD;IAAM,KAAK,EAAEC,mBAAmB,CAACC,SAAjC;IAAA,WAEmBJ,KAAK,IAAI,KAAC,KAAD;MAAO,MAAM,EAAE;QAAEK,GAAG,EAAEL;MAAP,CAAf;MAA+B,KAAK,EAAE;QAAEM,KAAK,EAAE,GAAT;QAAcC,MAAM,EAAE;MAAtB;IAAtC,EAF5B,EAKA,KAAC,IAAD;MAAM,KAAK,EAAEJ,mBAAmB,CAACK,kBAAjC;MAAA,UACA,MAAC,gBAAD;QAAkB,OAAO,EAAEN,QAA3B;QAAqC,KAAK,EAAEC,mBAAmB,CAACM,SAAhE;QAAA,WACA,MAAC,IAAD;UAAA,WAAOT,KAAK,GAAG,MAAH,GAAY,QAAxB;QAAA,EADA,EAEA,KAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,IAAI,EAAE,EAA/B;UAAmC,KAAK,EAAC;QAAzC,EAFA;MAAA;IADA,EALA;EAAA,EADC;AAiBA;AAED,IAAMG,mBAAmB,GAACO,UAAU,CAACC,MAAX,CAAkB;EACzCP,SAAS,EAAC;IACNQ,SAAS,EAAC,CADJ;IAENL,MAAM,EAAC,GAFD;IAGND,KAAK,EAAC,GAHA;IAINO,eAAe,EAAC,SAJV;IAKNC,QAAQ,EAAC,UALH;IAMNC,YAAY,EAAC,GANP;IAONC,QAAQ,EAAC;EAPH,CAD+B;EAUzCR,kBAAkB,EAAC;IACfS,OAAO,EAAC,GADO;IAEfH,QAAQ,EAAC,UAFM;IAGfI,KAAK,EAAC,CAHS;IAIfC,MAAM,EAAC,CAJQ;IAKfN,eAAe,EAAC,WALD;IAMfP,KAAK,EAAC,MANS;IAOfC,MAAM,EAAC;EAPQ,CAVsB;EAmBzCE,SAAS,EAAC;IACNW,OAAO,EAAC,MADF;IAENC,UAAU,EAAC,QAFL;IAGNC,cAAc,EAAC;EAHT;AAnB+B,CAAlB,CAA1B"},"metadata":{},"sourceType":"module"}