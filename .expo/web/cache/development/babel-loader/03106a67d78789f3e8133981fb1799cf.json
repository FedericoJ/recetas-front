{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { Divider, Flex, Box, Heading, Center, NativeBaseProvider, Text, Button, Input, Icon, View } from \"native-base\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { ButtonConIconoFondoRosa } from \"./ButtonsLogin\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Tabs = function Tabs() {\n  var navigation = useNavigation();\n\n  var _React$useState = React.useState('gray'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      colorTipo = _React$useState2[0],\n      setColorTipo = _React$useState2[1];\n\n  var textColorTipo = {\n    color: colorTipo\n  };\n\n  var _React$useState3 = React.useState('gray'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      colorUs = _React$useState4[0],\n      setColorUs = _React$useState4[1];\n\n  var textColorUs = {\n    color: colorUs\n  };\n\n  var _React$useState5 = React.useState('gray'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      colorPla = _React$useState6[0],\n      setColorPla = _React$useState6[1];\n\n  var textColorPla = {\n    color: colorPla\n  };\n\n  var _React$useState7 = React.useState('#AC6363'),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      colorIngre = _React$useState8[0],\n      setColorIngre = _React$useState8[1];\n\n  var textColorIngre = {\n    color: colorIngre\n  };\n  cons;\n  return _jsxs(NativeBaseProvider, {\n    style: {\n      backgroundColor: '#ffff'\n    },\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TouchableOpacity, {\n        style: {\n          marginLeft: '2%'\n        },\n        children: _jsx(Text, {\n          style: [styles.text, textColorIngre],\n          children: \" Ingrediente \"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {},\n        children: _jsx(Text, {\n          style: [styles.text, textColorPla],\n          children: \" Plato \"\n        }, 1)\n      }), _jsx(TouchableOpacity, {\n        style: {},\n        onPress: function onPress() {\n          return setColorTipo('#AC6363');\n        },\n        children: _jsx(Text, {\n          style: [styles.text, textColorTipo],\n          children: \" Tipo \"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          marginRight: '5%'\n        },\n        children: _jsx(Text, {\n          style: [styles.text, textColorUs],\n          children: \" Usuario \"\n        })\n      })]\n    }), _jsxs(View, {\n      style: {\n        alignItems: \"left\",\n        backgroundColor: '#ffff'\n      },\n      children: [_jsx(Input, {\n        style: {\n          backgroundColor: '#ffff'\n        },\n        mx: \"2\",\n        my: \"3\",\n        size: \"xs\",\n        placeholder: \"Input\",\n        InputRightElement: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Results');\n          },\n          children: _jsx(Icon, {\n            as: _jsx(MaterialIcons, {\n              name: \"search\"\n            }),\n            size: 8,\n            ml: \"2\",\n            color: \"muted.400\"\n          })\n        })\n      }), _jsx(ButtonConIconoFondoRosa, {\n        text: \"Contiene\",\n        onPress: function onPress() {\n          return console.log(\"hola\");\n        }\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: '#ffff',\n    justifyContent: \"space-between\"\n  },\n  text: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  }\n});\nexport default Tabs;","map":{"version":3,"names":["React","Divider","Flex","Box","Heading","Center","NativeBaseProvider","Text","Button","Input","Icon","View","MaterialIcons","ButtonConIconoFondoRosa","useNavigation","Tabs","navigation","useState","colorTipo","setColorTipo","textColorTipo","color","colorUs","setColorUs","textColorUs","colorPla","setColorPla","textColorPla","colorIngre","setColorIngre","textColorIngre","cons","backgroundColor","styles","container","marginLeft","text","marginRight","alignItems","navigate","console","log","StyleSheet","create","flex","flexDirection","justifyContent","fontSize","textDecorationLine"],"sources":["C:/source/distribuidas/recetas-front/src/components/Tabs.js"],"sourcesContent":["import React from 'react';\r\nimport { Divider, Flex, Box, Heading, Center,NativeBaseProvider,Text,Button,Input,Icon,View } from \"native-base\";\r\nimport {StyleSheet,TouchableOpacity} from 'react-native';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport {  ButtonConIconoFondoRosa } from './ButtonsLogin';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n  \r\n    const Tabs  = () => {\r\n\r\n        const navigation = useNavigation();\r\n       \r\n        const [colorTipo,setColorTipo] =React.useState('gray');\r\n        const textColorTipo ={color :colorTipo};\r\n\r\n        const [colorUs,setColorUs] =React.useState('gray');\r\n        const textColorUs ={color:colorUs};\r\n\r\n        const [colorPla,setColorPla] =React.useState('gray');\r\n        const textColorPla ={color:colorPla};\r\n\r\n\r\n        const [colorIngre,setColorIngre] =React.useState('#AC6363');\r\n        const textColorIngre ={color:colorIngre};\r\n\r\n        cons\r\n\r\n        return (\r\n            <NativeBaseProvider style={{backgroundColor:'#ffff'}}>\r\n               \r\n                    <View style={styles.container}>\r\n\r\n                         <TouchableOpacity style={{marginLeft:'2%'}}>\r\n\r\n                                <Text  style={[styles.text,textColorIngre]}> Ingrediente </Text>\r\n\r\n                        </TouchableOpacity>\r\n\r\n                        <TouchableOpacity style={{}}>\r\n\r\n                            <Text key={1} style={[styles.text,textColorPla]}> Plato </Text>\r\n\r\n                        </TouchableOpacity>\r\n\r\n                        <TouchableOpacity style={{}} onPress={()=> setColorTipo('#AC6363')}>\r\n\r\n                            <Text  style={[styles.text,textColorTipo]} > Tipo </Text>\r\n\r\n                        </TouchableOpacity>\r\n        \r\n                       \r\n                        <TouchableOpacity style={{marginRight:'5%'}}>\r\n\r\n                            <Text  style={[styles.text,textColorUs]}> Usuario </Text>\r\n\r\n                        </TouchableOpacity>\r\n            \r\n                       \r\n            \r\n    \r\n                    </View>\r\n\r\n\r\n                    <View style={{alignItems:\"left\",backgroundColor:'#ffff'}}>\r\n\r\n                        <Input style={{backgroundColor:'#ffff'}} mx=\"2\" my=\"3\" size=\"xs\" placeholder=\"Input\" \r\n                        InputRightElement={\r\n                                            <TouchableOpacity\r\n                                                onPress = { () => navigation.navigate('Results') }\r\n                                            >\r\n                                                <Icon as={<MaterialIcons name=\"search\" />} size={8} ml=\"2\" color=\"muted.400\" />\r\n                                            </TouchableOpacity>\r\n                                            } />\r\n                    \r\n\r\n                        <ButtonConIconoFondoRosa text=\"Contiene\" onPress={() => console.log(\"hola\")}/>\r\n\r\n\r\n                    </View>\r\n\r\n            </NativeBaseProvider>\r\n          );\r\n\r\n\r\n         \r\n\r\n    };\r\n        \r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n          flex: 1,\r\n          flexDirection:\"row\",\r\n          alignItems:\"center\",\r\n          backgroundColor:'#ffff',\r\n          justifyContent:\"space-between\"\r\n        },\r\n        text:{\r\n            fontSize:15, \r\n            textDecorationLine: 'underline'\r\n        }\r\n      });\r\n    \r\n        \r\nexport default Tabs"],"mappings":"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"},"metadata":{},"sourceType":"module"}