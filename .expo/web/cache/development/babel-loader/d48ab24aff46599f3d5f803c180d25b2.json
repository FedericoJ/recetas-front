{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NativeBaseProvider, Input, Select, CheckIcon, HStack } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InputSelectCombo = function InputSelectCombo(_ref) {\n  var item = _ref.item,\n      unidades = _ref.unidades;\n\n  var _useState = useState(\"1\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      unidadSeleccionada = _useState2[0],\n      setUnidadSeleccionada = _useState2[1];\n\n  var onChangeHandler = function onChangeHandler(item) {\n    setUnidadSeleccionada(item);\n  };\n\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(HStack, {\n      children: [_jsx(Input, {\n        style: {\n          backgroundColor: '#ffff',\n          textAlign: \"center\"\n        },\n        w: \"40%\",\n        mx: \"2\",\n        value: item.cantidad\n      }), _jsx(Select, {\n        style: {\n          backgroundColor: '#ffff'\n        },\n        selectedValue: unidadSeleccionada,\n        w: \"30%\",\n        mx: \"2\",\n        _selectedItem: {\n          bg: \"indigo\",\n          endIcon: _jsx(CheckIcon, {\n            size: 5\n          })\n        },\n        onValueChange: onChangeHandler,\n        children: unidades.map(function (unidad) {\n          return _jsx(Select.Item, {\n            label: unidad.label,\n            value: unidad.value\n          }, unidad.value);\n        })\n      })]\n    })\n  });\n};\n\nvar Ingredients = function Ingredients(_ref2) {\n  var ingredientes = _ref2.ingredientes;\n\n  var _useState3 = useState([{\n    label: \"kg\",\n    value: \"1\"\n  }, {\n    label: \"g\",\n    value: \"2\"\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      unidades = _useState4[0],\n      setUnidades = _useState4[1];\n\n  return _jsx(View, {\n    children: ingredientes && ingredientes.map(function (element, i) {\n      return _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginTop: \"5%\",\n          marginBottom: \"2%\",\n          marginLeft: \"5%\"\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 16,\n            width: \"60%\"\n          },\n          children: element.nombre\n        }), _jsx(InputSelectCombo, {\n          unidades: unidades,\n          item: element\n        })]\n      }, i);\n    })\n  });\n};\n\nexport default Ingredients;","map":{"version":3,"names":["React","useState","NativeBaseProvider","Input","Select","CheckIcon","HStack","InputSelectCombo","item","unidades","unidadSeleccionada","setUnidadSeleccionada","onChangeHandler","backgroundColor","textAlign","cantidad","bg","endIcon","map","unidad","label","value","Ingredients","ingredientes","setUnidades","element","i","flexDirection","justifyContent","alignItems","marginTop","marginBottom","marginLeft","fontSize","width","nombre"],"sources":["C:/source/distribuidas/recetas-front/src/components/Ingredients.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport { NativeBaseProvider, Input, Select, CheckIcon,HStack } from \"native-base\";\r\n\r\nconst InputSelectCombo = ({item, unidades}) => {\r\n\r\n  const [unidadSeleccionada, setUnidadSeleccionada] = useState(\"1\");\r\n \r\n  const onChangeHandler = (item) => {\r\n    setUnidadSeleccionada(item);\r\n  };\r\n\r\n  return(<NativeBaseProvider>\r\n    <HStack>\r\n    <Input\r\n      style={{backgroundColor:'#ffff',\r\n      textAlign:\"center\" }} \r\n      w='40%' \r\n      mx=\"2\"\r\n      value={item.cantidad}\r\n    />\r\n\r\n    <Select\r\n      style={{backgroundColor:'#ffff'}}\r\n      selectedValue={unidadSeleccionada}\r\n      w='30%'\r\n      mx=\"2\"\r\n      _selectedItem={{\r\n        bg: \"indigo\",\r\n        endIcon: <CheckIcon size={5} />,\r\n      }}\r\n      onValueChange={onChangeHandler}\r\n    >\r\n      {unidades.map((unidad) => (\r\n        <Select.Item\r\n          key={unidad.value}\r\n          label={unidad.label}\r\n          value={unidad.value}\r\n        />\r\n      ))}\r\n    </Select>\r\n    </HStack>\r\n  </NativeBaseProvider>)\r\n}\r\n\r\n\r\nconst Ingredients = ({ ingredientes }) => {\r\n\r\n  const [unidades, setUnidades] = useState([\r\n    { label: \"kg\", value: \"1\" },\r\n    { label: \"g\", value: \"2\" },\r\n  ]);\r\n\r\n\r\n  return (\r\n    <View>\r\n      {ingredientes &&\r\n        ingredientes.map((element, i) => (\r\n          <View\r\n            key={i}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginTop: \"5%\",\r\n              marginBottom: \"2%\",\r\n              marginLeft: \"5%\",\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 16, width: \"60%\" }}>{element.nombre}</Text>\r\n\r\n            <InputSelectCombo  unidades={unidades} item={element}/>\r\n          </View>\r\n        ))}\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Ingredients;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,kBAAT,EAA6BC,KAA7B,EAAoCC,MAApC,EAA4CC,SAA5C,EAAsDC,MAAtD,QAAoE,aAApE;;;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAsB;EAAA,IAApBC,IAAoB,QAApBA,IAAoB;EAAA,IAAdC,QAAc,QAAdA,QAAc;;EAE7C,gBAAoDR,QAAQ,CAAC,GAAD,CAA5D;EAAA;EAAA,IAAOS,kBAAP;EAAA,IAA2BC,qBAA3B;;EAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,IAAD,EAAU;IAChCG,qBAAqB,CAACH,IAAD,CAArB;EACD,CAFD;;EAIA,OAAO,KAAC,kBAAD;IAAA,UACL,MAAC,MAAD;MAAA,WACA,KAAC,KAAD;QACE,KAAK,EAAE;UAACK,eAAe,EAAC,OAAjB;UACPC,SAAS,EAAC;QADH,CADT;QAGE,CAAC,EAAC,KAHJ;QAIE,EAAE,EAAC,GAJL;QAKE,KAAK,EAAEN,IAAI,CAACO;MALd,EADA,EASA,KAAC,MAAD;QACE,KAAK,EAAE;UAACF,eAAe,EAAC;QAAjB,CADT;QAEE,aAAa,EAAEH,kBAFjB;QAGE,CAAC,EAAC,KAHJ;QAIE,EAAE,EAAC,GAJL;QAKE,aAAa,EAAE;UACbM,EAAE,EAAE,QADS;UAEbC,OAAO,EAAE,KAAC,SAAD;YAAW,IAAI,EAAE;UAAjB;QAFI,CALjB;QASE,aAAa,EAAEL,eATjB;QAAA,UAWGH,QAAQ,CAACS,GAAT,CAAa,UAACC,MAAD;UAAA,OACZ,KAAC,MAAD,CAAQ,IAAR;YAEE,KAAK,EAAEA,MAAM,CAACC,KAFhB;YAGE,KAAK,EAAED,MAAM,CAACE;UAHhB,GACOF,MAAM,CAACE,KADd,CADY;QAAA,CAAb;MAXH,EATA;IAAA;EADK,EAAP;AA+BD,CAvCD;;AA0CA,IAAMC,WAAW,GAAG,SAAdA,WAAc,QAAsB;EAAA,IAAnBC,YAAmB,SAAnBA,YAAmB;;EAExC,iBAAgCtB,QAAQ,CAAC,CACvC;IAAEmB,KAAK,EAAE,IAAT;IAAeC,KAAK,EAAE;EAAtB,CADuC,EAEvC;IAAED,KAAK,EAAE,GAAT;IAAcC,KAAK,EAAE;EAArB,CAFuC,CAAD,CAAxC;EAAA;EAAA,IAAOZ,QAAP;EAAA,IAAiBe,WAAjB;;EAMA,OACE,KAAC,IAAD;IAAA,UACGD,YAAY,IACXA,YAAY,CAACL,GAAb,CAAiB,UAACO,OAAD,EAAUC,CAAV;MAAA,OACf,MAAC,IAAD;QAEE,KAAK,EAAE;UACLC,aAAa,EAAE,KADV;UAELC,cAAc,EAAE,QAFX;UAGLC,UAAU,EAAE,QAHP;UAILC,SAAS,EAAE,IAJN;UAKLC,YAAY,EAAE,IALT;UAMLC,UAAU,EAAE;QANP,CAFT;QAAA,WAWE,KAAC,IAAD;UAAM,KAAK,EAAE;YAAEC,QAAQ,EAAE,EAAZ;YAAgBC,KAAK,EAAE;UAAvB,CAAb;UAAA,UAA8CT,OAAO,CAACU;QAAtD,EAXF,EAaE,KAAC,gBAAD;UAAmB,QAAQ,EAAE1B,QAA7B;UAAuC,IAAI,EAAEgB;QAA7C,EAbF;MAAA,GACOC,CADP,CADe;IAAA,CAAjB;EAFJ,EADF;AAuBD,CA/BD;;AAiCA,eAAeJ,WAAf"},"metadata":{},"sourceType":"module"}