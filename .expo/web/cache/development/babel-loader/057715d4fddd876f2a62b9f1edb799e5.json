{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport FloatingActionItem from \"./FloatingActionItem\";\nimport AddIcon from \"./AddIcon\";\nimport { isIphoneX } from \"./utils/platform\";\nimport { getTouchableComponent, getRippleProps } from \"./utils/touchable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DEVICE_WIDTH = Dimensions.get(\"window\").width;\nvar DEFAULT_SHADOW_PROPS = {\n  shadowOpacity: 0.35,\n  shadowOffset: {\n    width: 0,\n    height: 5\n  },\n  shadowColor: \"#000000\",\n  shadowRadius: 3\n};\n\nvar FloatingAction = function (_Component) {\n  _inherits(FloatingAction, _Component);\n\n  var _super = _createSuper(FloatingAction);\n\n  function FloatingAction(props) {\n    var _this;\n\n    _classCallCheck(this, FloatingAction);\n\n    _this = _super.call(this, props);\n\n    _this.onKeyboardShow = function (e) {\n      var _this$props = _this.props,\n          buttonSize = _this$props.buttonSize,\n          actionsPaddingTopBottom = _this$props.actionsPaddingTopBottom;\n      var height = e.endCoordinates.height;\n      Animated.parallel([Animated.spring(_this.actionsBottomAnimation, {\n        bounciness: 0,\n        toValue: buttonSize + _this.distanceToVerticalEdge + actionsPaddingTopBottom + height - (isIphoneX() ? 40 : 0),\n        duration: 250,\n        useNativeDriver: false\n      }), Animated.spring(_this.mainBottomAnimation, {\n        bounciness: 0,\n        toValue: _this.distanceToVerticalEdge + height - (isIphoneX() ? 40 : 0),\n        duration: 250,\n        useNativeDriver: false\n      })]).start();\n    };\n\n    _this.onKeyboardHideHide = function () {\n      var _this$props2 = _this.props,\n          buttonSize = _this$props2.buttonSize,\n          actionsPaddingTopBottom = _this$props2.actionsPaddingTopBottom;\n      Animated.parallel([Animated.spring(_this.actionsBottomAnimation, {\n        bounciness: 0,\n        toValue: buttonSize + _this.distanceToVerticalEdge + actionsPaddingTopBottom,\n        duration: 250,\n        useNativeDriver: false\n      }), Animated.spring(_this.mainBottomAnimation, {\n        bounciness: 0,\n        toValue: _this.distanceToVerticalEdge,\n        duration: 250,\n        useNativeDriver: false\n      })]).start();\n    };\n\n    _this.getShadow = function () {\n      var shadow = _this.props.shadow;\n      return _objectSpread(_objectSpread({}, DEFAULT_SHADOW_PROPS), shadow);\n    };\n\n    _this.getIcon = function () {\n      var _this$props3 = _this.props,\n          actions = _this$props3.actions,\n          floatingIcon = _this$props3.floatingIcon,\n          overrideWithAction = _this$props3.overrideWithAction,\n          iconWidth = _this$props3.iconWidth,\n          iconHeight = _this$props3.iconHeight,\n          iconColor = _this$props3.iconColor;\n\n      if (overrideWithAction) {\n        var icon = actions[0].icon;\n\n        if (React.isValidElement(icon)) {\n          return icon;\n        }\n\n        return _jsx(Image, {\n          style: {\n            width: iconWidth,\n            height: iconHeight\n          },\n          source: icon\n        });\n      }\n\n      if (floatingIcon) {\n        if (React.isValidElement(floatingIcon)) {\n          return floatingIcon;\n        }\n\n        return _jsx(Image, {\n          style: {\n            width: iconWidth,\n            height: iconHeight\n          },\n          source: floatingIcon\n        });\n      }\n\n      return _jsx(AddIcon, {\n        width: iconWidth,\n        height: iconHeight,\n        backgroundColor: iconColor\n      });\n    };\n\n    _this.reset = function () {\n      var _this$props4 = _this.props,\n          animated = _this$props4.animated,\n          onClose = _this$props4.onClose;\n\n      if (animated) {\n        Animated.spring(_this.animation, {\n          toValue: 0,\n          useNativeDriver: false\n        }).start();\n        Animated.spring(_this.actionsAnimation, {\n          toValue: 0,\n          useNativeDriver: false\n        }).start();\n      }\n\n      _this.updateState({\n        active: false\n      }, function () {\n        if (onClose) {\n          onClose();\n        }\n      });\n    };\n\n    _this.animateButton = function () {\n      var _this$props5 = _this.props,\n          overrideWithAction = _this$props5.overrideWithAction,\n          actions = _this$props5.actions,\n          floatingIcon = _this$props5.floatingIcon,\n          animated = _this$props5.animated,\n          dismissKeyboardOnPress = _this$props5.dismissKeyboardOnPress,\n          onPressMain = _this$props5.onPressMain,\n          onOpen = _this$props5.onOpen;\n      var active = _this.state.active;\n\n      if (dismissKeyboardOnPress) {\n        Keyboard.dismiss();\n      }\n\n      if (overrideWithAction) {\n        _this.handlePressItem(actions[0].name);\n\n        return;\n      }\n\n      if (onPressMain) {\n        onPressMain(!active);\n      }\n\n      if (!active) {\n        if (!floatingIcon) {\n          if (animated) {\n            Animated.spring(_this.animation, {\n              toValue: 1,\n              useNativeDriver: false\n            }).start();\n          }\n        }\n\n        if (animated) {\n          Animated.spring(_this.actionsAnimation, {\n            toValue: 1,\n            useNativeDriver: false\n          }).start();\n          LayoutAnimation.configureNext({\n            duration: 180,\n            create: {\n              type: LayoutAnimation.Types.easeInEaseOut,\n              property: LayoutAnimation.Properties.opacity\n            }\n          });\n        }\n\n        _this.updateState({\n          active: true\n        }, function () {\n          if (onOpen) {\n            onOpen();\n          }\n        });\n      } else {\n        _this.reset();\n      }\n    };\n\n    _this.updateState = function (nextState, callback) {\n      var onStateChange = _this.props.onStateChange;\n      var active = _this.state.active;\n\n      _this.setState(nextState, function () {\n        if (callback) {\n          callback();\n        }\n\n        if (onStateChange) {\n          onStateChange({\n            isActive: active\n          });\n        }\n      });\n    };\n\n    _this.handlePressBackdrop = function () {\n      var onPressBackdrop = _this.props.onPressBackdrop;\n\n      if (onPressBackdrop) {\n        onPressBackdrop();\n      }\n\n      _this.reset();\n    };\n\n    _this.handlePressItem = function (itemName) {\n      var onPressItem = _this.props.onPressItem;\n\n      if (onPressItem) {\n        onPressItem(itemName);\n      }\n\n      _this.reset();\n    };\n\n    _this.state = {\n      active: false,\n      shouldRender: props.visible ? true : false\n    };\n    _this.mainBottomAnimation = new Animated.Value(_this.distanceToVerticalEdge + props.mainVerticalDistance);\n    _this.actionsBottomAnimation = new Animated.Value(props.buttonSize + _this.distanceToVerticalEdge + props.actionsPaddingTopBottom + props.mainVerticalDistance);\n    _this.animation = new Animated.Value(0);\n    _this.actionsAnimation = new Animated.Value(0);\n    _this.visibleAnimation = new Animated.Value(props.visible ? 0 : 1);\n    _this.fadeAnimation = new Animated.Value(props.visible ? 1 : 0);\n    return _this;\n  }\n\n  _createClass(FloatingAction, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props6 = this.props,\n          openOnMount = _this$props6.openOnMount,\n          listenKeyboard = _this$props6.listenKeyboard;\n\n      if (openOnMount) {\n        this.animateButton();\n      }\n\n      if (listenKeyboard) {\n        var showEvent = Platform.OS === \"ios\" ? \"keyboardWillShow\" : \"keyboardDidShow\";\n        var hideEvent = Platform.OS === \"ios\" ? \"keyboardWillHide\" : \"keyboardDidHide\";\n        this.keyboardWillShowListener = Keyboard.addListener(showEvent, this.onKeyboardShow);\n        this.keyboardWillHideListener = Keyboard.addListener(hideEvent, this.onKeyboardHideHide);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      var visible = this.props.visible;\n\n      if (prevProps.visible !== visible) {\n        if (visible) {\n          this.setState({\n            shouldRender: true\n          });\n          Animated.parallel([Animated.spring(this.visibleAnimation, {\n            toValue: 0,\n            useNativeDriver: false\n          }), Animated.spring(this.fadeAnimation, {\n            toValue: 1,\n            useNativeDriver: false\n          })]).start();\n        }\n\n        if (!visible) {\n          Animated.parallel([Animated.spring(this.visibleAnimation, {\n            toValue: 1,\n            useNativeDriver: false\n          }), Animated.spring(this.fadeAnimation, {\n            toValue: 0,\n            useNativeDriver: false\n          })]).start(function () {\n            return _this2.setState({\n              shouldRender: false\n            });\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var listenKeyboard = this.props.listenKeyboard;\n\n      if (listenKeyboard) {\n        this.keyboardWillShowListener.remove();\n        this.keyboardWillHideListener.remove();\n      }\n    }\n  }, {\n    key: \"distanceToHorizontalEdge\",\n    get: function get() {\n      var distanceToEdge = this.props.distanceToEdge;\n      return typeof distanceToEdge === 'number' ? distanceToEdge : distanceToEdge.horizontal;\n    }\n  }, {\n    key: \"distanceToVerticalEdge\",\n    get: function get() {\n      var distanceToEdge = this.props.distanceToEdge;\n      return typeof distanceToEdge === 'number' ? distanceToEdge : distanceToEdge.vertical;\n    }\n  }, {\n    key: \"renderMainButton\",\n    value: function renderMainButton() {\n      var _this$props7 = this.props,\n          buttonColor = _this$props7.buttonColor,\n          buttonSize = _this$props7.buttonSize,\n          color = _this$props7.color,\n          position = _this$props7.position,\n          overrideWithAction = _this$props7.overrideWithAction,\n          animated = _this$props7.animated;\n      var active = this.state.active;\n\n      if (buttonColor) {\n        console.warn('FloatingAction: \"buttonColor\" property was deprecated. Please use \"color\"');\n      }\n\n      var mainButtonColor = buttonColor || color;\n      var animatedVisibleView;\n      var animatedViewStyle;\n\n      if (animated) {\n        animatedVisibleView = {\n          opacity: this.fadeAnimation,\n          transform: [{\n            rotate: this.visibleAnimation.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\"0deg\", \"90deg\"]\n            })\n          }, {\n            scale: this.visibleAnimation.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0]\n            })\n          }]\n        };\n        animatedViewStyle = {\n          transform: [{\n            rotate: this.animation.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\"0deg\", \"45deg\"]\n            })\n          }]\n        };\n\n        if (overrideWithAction) {\n          animatedViewStyle = {};\n        }\n      } else if (active) {\n        animatedVisibleView = {};\n        animatedViewStyle = {\n          transform: [{\n            rotate: \"45deg\"\n          }]\n        };\n      } else {\n        animatedVisibleView = {};\n        animatedViewStyle = {\n          transform: [{\n            rotate: \"0deg\"\n          }]\n        };\n      }\n\n      var Touchable = getTouchableComponent();\n      var propStyles = {\n        backgroundColor: mainButtonColor,\n        bottom: this.mainBottomAnimation\n      };\n\n      if ([\"left\", \"right\"].indexOf(position) > -1) {\n        propStyles[position] = this.distanceToHorizontalEdge;\n      }\n\n      var sizeStyle = {\n        width: buttonSize,\n        height: buttonSize,\n        borderRadius: buttonSize / 2\n      };\n      return _jsx(Animated.View, {\n        style: [styles.buttonContainer, sizeStyle, styles[position + \"Button\"], propStyles, animatedVisibleView, this.getShadow()],\n        accessible: true,\n        accessibilityLabel: \"Floating Action Button\",\n        children: _jsx(Touchable, _objectSpread(_objectSpread({}, getRippleProps(mainButtonColor)), {}, {\n          style: [styles.button, sizeStyle],\n          activeOpacity: 0.85,\n          onPress: this.animateButton,\n          children: _jsx(Animated.View, {\n            style: [styles.buttonTextContainer, sizeStyle, animatedViewStyle],\n            children: this.getIcon()\n          })\n        }))\n      });\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this3 = this;\n\n      var _this$props8 = this.props,\n          actions = _this$props8.actions,\n          position = _this$props8.position,\n          overrideWithAction = _this$props8.overrideWithAction,\n          distanceToEdge = _this$props8.distanceToEdge,\n          actionsPaddingTopBottom = _this$props8.actionsPaddingTopBottom,\n          animated = _this$props8.animated,\n          tintColor = _this$props8.tintColor;\n      var active = this.state.active;\n\n      if (!actions || actions.length === 0) {\n        return undefined;\n      }\n\n      if (overrideWithAction) {\n        return null;\n      }\n\n      var animatedActionsStyle;\n\n      if (animated) {\n        animatedActionsStyle = {\n          opacity: this.actionsAnimation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, 1]\n          })\n        };\n      } else {\n        animatedActionsStyle = {\n          opacity: active ? 1 : 0\n        };\n      }\n\n      var actionsStyles = [styles.actions, styles[position + \"Actions\"], animatedActionsStyle, {\n        bottom: this.actionsBottomAnimation\n      }];\n\n      if (active) {\n        actionsStyles.push(styles[position + \"ActionsVisible\"]);\n      }\n\n      var sortedActions = actions.sort(function (a, b) {\n        return a.position - b.position;\n      });\n      return _jsx(Animated.View, {\n        style: actionsStyles,\n        pointerEvents: \"box-none\",\n        children: sortedActions.map(function (action) {\n          var textColor = action.textColor || action.actionsTextColor;\n          var textBackground = action.textBackground || action.actionsTextBackground;\n          var tintColorIcon = action.tintColor || tintColor || '#fff';\n          return _jsx(FloatingActionItem, _objectSpread(_objectSpread({\n            paddingTopBottom: actionsPaddingTopBottom,\n            distanceToEdge: distanceToEdge,\n            textColor: textColor,\n            tintColor: tintColorIcon,\n            textBackground: textBackground,\n            shadow: _this3.getShadow()\n          }, action), {}, {\n            position: position,\n            active: active,\n            onPress: _this3.handlePressItem,\n            animated: animated\n          }), action.name);\n        })\n      });\n    }\n  }, {\n    key: \"renderTappableBackground\",\n    value: function renderTappableBackground() {\n      var overlayColor = this.props.overlayColor;\n      return _jsx(TouchableOpacity, {\n        activeOpacity: 1,\n        style: [styles.overlay, {\n          backgroundColor: overlayColor\n        }],\n        onPress: this.handlePressBackdrop\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          active = _this$state.active,\n          shouldRender = _this$state.shouldRender;\n      var _this$props9 = this.props,\n          showBackground = _this$props9.showBackground,\n          visible = _this$props9.visible;\n\n      if (!shouldRender && !visible) {\n        return null;\n      }\n\n      return _jsxs(Animated.View, {\n        pointerEvents: \"box-none\",\n        style: [styles.overlay, {\n          backgroundColor: \"transparent\"\n        }],\n        children: [active && showBackground && this.renderTappableBackground(), this.renderActions(), this.renderMainButton()]\n      });\n    }\n  }]);\n\n  return FloatingAction;\n}(Component);\n\nFloatingAction.propTypes = {\n  tintColor: PropTypes.string,\n  actions: PropTypes.arrayOf(PropTypes.shape({\n    color: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string.isRequired,\n    buttonSize: PropTypes.number,\n    text: PropTypes.string,\n    textBackground: PropTypes.string,\n    textColor: PropTypes.string,\n    component: PropTypes.func,\n    animated: PropTypes.bool,\n    tintColor: PropTypes.string\n  })),\n  animated: PropTypes.bool,\n  color: PropTypes.string,\n  distanceToEdge: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    vertical: PropTypes.number,\n    horizontal: PropTypes.number\n  })]),\n  mainVerticalDistance: PropTypes.number,\n  visible: PropTypes.bool,\n  overlayColor: PropTypes.string,\n  position: PropTypes.oneOf([\"right\", \"left\", \"center\"]),\n  overrideWithAction: PropTypes.bool,\n  floatingIcon: PropTypes.any,\n  showBackground: PropTypes.bool,\n  openOnMount: PropTypes.bool,\n  actionsPaddingTopBottom: PropTypes.number,\n  buttonSize: PropTypes.number,\n  iconHeight: PropTypes.number,\n  iconWidth: PropTypes.number,\n  listenKeyboard: PropTypes.bool,\n  dismissKeyboardOnPress: PropTypes.bool,\n  shadow: PropTypes.shape({\n    shadowOpacity: PropTypes.number,\n    shadowOffset: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    shadowColor: PropTypes.string,\n    shadowRadius: PropTypes.number\n  }),\n  onPressItem: PropTypes.func,\n  onPressMain: PropTypes.func,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  onPressBackdrop: PropTypes.func,\n  onStateChange: PropTypes.func\n};\nFloatingAction.defaultProps = {\n  dismissKeyboardOnPress: false,\n  listenKeyboard: false,\n  actionsPaddingTopBottom: 8,\n  overrideWithAction: false,\n  visible: true,\n  color: \"#1253bc\",\n  overlayColor: \"rgba(68, 68, 68, 0.6)\",\n  position: \"right\",\n  distanceToEdge: 30,\n  openOnMount: false,\n  showBackground: true,\n  buttonSize: 56,\n  iconHeight: 15,\n  iconWidth: 15,\n  iconColor: '#fff',\n  mainVerticalDistance: 0,\n  animated: true,\n  shadow: {}\n};\nvar styles = StyleSheet.create({\n  actions: {\n    position: \"absolute\",\n    bottom: 85,\n    zIndex: 10\n  },\n  rightActions: {\n    alignItems: \"flex-end\",\n    right: -1000\n  },\n  leftActions: {\n    alignItems: \"flex-start\",\n    left: -1000\n  },\n  centerActions: {\n    left: -1000\n  },\n  rightActionsVisible: {\n    right: 0\n  },\n  leftActionsVisible: {\n    left: 0\n  },\n  centerActionsVisible: {\n    left: DEVICE_WIDTH / 2 - 30\n  },\n  overlay: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    elevation: 0,\n    zIndex: 0\n  },\n  buttonContainer: {\n    overflow: Platform.OS === \"ios\" ? \"visible\" : \"hidden\",\n    zIndex: 2,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 5,\n    position: \"absolute\"\n  },\n  button: {\n    zIndex: 3,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  rightButton: {},\n  leftButton: {},\n  centerButton: {\n    left: DEVICE_WIDTH / 2 - 28\n  },\n  buttonTextContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default FloatingAction;","map":{"version":3,"names":["React","Component","PropTypes","FloatingActionItem","AddIcon","isIphoneX","getTouchableComponent","getRippleProps","DEVICE_WIDTH","Dimensions","get","width","DEFAULT_SHADOW_PROPS","shadowOpacity","shadowOffset","height","shadowColor","shadowRadius","FloatingAction","props","onKeyboardShow","e","buttonSize","actionsPaddingTopBottom","endCoordinates","Animated","parallel","spring","actionsBottomAnimation","bounciness","toValue","distanceToVerticalEdge","duration","useNativeDriver","mainBottomAnimation","start","onKeyboardHideHide","getShadow","shadow","getIcon","actions","floatingIcon","overrideWithAction","iconWidth","iconHeight","iconColor","icon","isValidElement","reset","animated","onClose","animation","actionsAnimation","updateState","active","animateButton","dismissKeyboardOnPress","onPressMain","onOpen","state","Keyboard","dismiss","handlePressItem","name","LayoutAnimation","configureNext","create","type","Types","easeInEaseOut","property","Properties","opacity","nextState","callback","onStateChange","setState","isActive","handlePressBackdrop","onPressBackdrop","itemName","onPressItem","shouldRender","visible","Value","mainVerticalDistance","visibleAnimation","fadeAnimation","openOnMount","listenKeyboard","showEvent","Platform","OS","hideEvent","keyboardWillShowListener","addListener","keyboardWillHideListener","prevProps","remove","distanceToEdge","horizontal","vertical","buttonColor","color","position","console","warn","mainButtonColor","animatedVisibleView","animatedViewStyle","transform","rotate","interpolate","inputRange","outputRange","scale","Touchable","propStyles","backgroundColor","bottom","indexOf","distanceToHorizontalEdge","sizeStyle","borderRadius","styles","buttonContainer","button","buttonTextContainer","tintColor","length","undefined","animatedActionsStyle","actionsStyles","push","sortedActions","sort","a","b","map","action","textColor","actionsTextColor","textBackground","actionsTextBackground","tintColorIcon","overlayColor","overlay","showBackground","renderTappableBackground","renderActions","renderMainButton","propTypes","string","arrayOf","shape","any","isRequired","number","text","component","func","bool","oneOfType","oneOf","defaultProps","StyleSheet","zIndex","rightActions","alignItems","right","leftActions","left","centerActions","rightActionsVisible","leftActionsVisible","centerActionsVisible","top","elevation","overflow","justifyContent","rightButton","leftButton","centerButton","flex"],"sources":["C:/source/distribuidas/recetas-front/node_modules/react-native-floating-action/src/FloatingAction.js"],"sourcesContent":["import React, { Component } from \"react\"; // eslint-disable-line\nimport PropTypes from \"prop-types\";\nimport {\n  StyleSheet,\n  Image,\n  Animated,\n  Dimensions,\n  TouchableOpacity,\n  LayoutAnimation,\n  Platform,\n  Keyboard\n} from \"react-native\";\n\nimport FloatingActionItem from \"./FloatingActionItem\";\nimport AddIcon from \"./AddIcon\";\n\nimport { isIphoneX } from \"./utils/platform\";\nimport { getTouchableComponent, getRippleProps } from \"./utils/touchable\";\n\nconst DEVICE_WIDTH = Dimensions.get(\"window\").width;\n\nconst DEFAULT_SHADOW_PROPS = {\n  shadowOpacity: 0.35,\n  shadowOffset: {\n    width: 0,\n    height: 5\n  },\n  shadowColor: \"#000000\",\n  shadowRadius: 3\n};\n\nclass FloatingAction extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: false,\n      shouldRender: props.visible ? true : false\n    };\n\n    this.mainBottomAnimation = new Animated.Value(\n      this.distanceToVerticalEdge + props.mainVerticalDistance\n    );\n    this.actionsBottomAnimation = new Animated.Value(\n      props.buttonSize +\n      this.distanceToVerticalEdge +\n      props.actionsPaddingTopBottom +\n      props.mainVerticalDistance\n    );\n    this.animation = new Animated.Value(0);\n    this.actionsAnimation = new Animated.Value(0);\n    this.visibleAnimation = new Animated.Value(props.visible ? 0 : 1);\n    /*\n     * this animation will fix an error on ReactNative (Android) where\n     * interpolations with 0 and 1 don't work as expected.\n     */\n    this.fadeAnimation = new Animated.Value(props.visible ? 1 : 0);\n  }\n\n  componentDidMount() {\n    const { openOnMount, listenKeyboard } = this.props;\n\n    if (openOnMount) {\n      this.animateButton();\n    }\n\n    if (listenKeyboard) {\n      const showEvent =\n        Platform.OS === \"ios\" ? \"keyboardWillShow\" : \"keyboardDidShow\";\n      const hideEvent =\n        Platform.OS === \"ios\" ? \"keyboardWillHide\" : \"keyboardDidHide\";\n      this.keyboardWillShowListener = Keyboard.addListener(\n        showEvent,\n        this.onKeyboardShow\n      );\n      this.keyboardWillHideListener = Keyboard.addListener(\n        hideEvent,\n        this.onKeyboardHideHide\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { visible } = this.props;\n\n    if (prevProps.visible !== visible) {\n      if (visible) {\n        this.setState({shouldRender: true});\n        Animated.parallel([\n          Animated.spring(this.visibleAnimation, { toValue: 0, useNativeDriver: false }),\n          Animated.spring(this.fadeAnimation, { toValue: 1, useNativeDriver: false })\n        ]).start();\n      }\n      if (!visible) {\n        Animated.parallel([\n          Animated.spring(this.visibleAnimation, { toValue: 1, useNativeDriver: false }),\n          Animated.spring(this.fadeAnimation, { toValue: 0, useNativeDriver: false })\n        ]).start(() => this.setState({shouldRender: false}));\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { listenKeyboard } = this.props;\n\n    if (listenKeyboard) {\n      this.keyboardWillShowListener.remove();\n      this.keyboardWillHideListener.remove();\n    }\n  }\n\n  get distanceToHorizontalEdge() {\n    const { distanceToEdge } = this.props;\n    return typeof distanceToEdge === 'number'\n      ? distanceToEdge\n      : distanceToEdge.horizontal;\n  }\n\n  get distanceToVerticalEdge() {\n    const { distanceToEdge } = this.props;\n    return typeof distanceToEdge === 'number'\n      ? distanceToEdge\n      : distanceToEdge.vertical;\n  }\n\n  onKeyboardShow = e => {\n    const { buttonSize, actionsPaddingTopBottom } = this.props;\n    const { height } = e.endCoordinates;\n\n    Animated.parallel([\n      Animated.spring(this.actionsBottomAnimation, {\n        bounciness: 0,\n        toValue:\n          buttonSize +\n          this.distanceToVerticalEdge +\n          actionsPaddingTopBottom +\n          height -\n          (isIphoneX() ? 40 : 0),\n        duration: 250,\n        useNativeDriver: false\n      }),\n      Animated.spring(this.mainBottomAnimation, {\n        bounciness: 0,\n        toValue: this.distanceToVerticalEdge + height - (isIphoneX() ? 40 : 0),\n        duration: 250,\n        useNativeDriver: false\n      })\n    ]).start();\n  };\n\n  onKeyboardHideHide = () => {\n    const { buttonSize, actionsPaddingTopBottom } = this.props;\n\n    Animated.parallel([\n      Animated.spring(this.actionsBottomAnimation, {\n        bounciness: 0,\n        toValue: buttonSize + this.distanceToVerticalEdge + actionsPaddingTopBottom,\n        duration: 250,\n        useNativeDriver: false\n      }),\n      Animated.spring(this.mainBottomAnimation, {\n        bounciness: 0,\n        toValue: this.distanceToVerticalEdge,\n        duration: 250,\n        useNativeDriver: false\n      })\n    ]).start();\n  };\n\n  getShadow = () => {\n    const { shadow } = this.props;\n\n    return {\n      ...DEFAULT_SHADOW_PROPS,\n      ...shadow\n    };\n  };\n\n  getIcon = () => {\n    const {\n      actions,\n      floatingIcon,\n      overrideWithAction,\n      iconWidth,\n      iconHeight,\n      iconColor,\n    } = this.props;\n\n    if (overrideWithAction) {\n      const { icon } = actions[0];\n\n      if (React.isValidElement(icon)) {\n        return icon;\n      }\n      return (\n        <Image style={{ width: iconWidth, height: iconHeight }} source={icon} />\n      );\n    }\n\n    if (floatingIcon) {\n      if (React.isValidElement(floatingIcon)) {\n        return floatingIcon;\n      }\n\n      return (\n        <Image\n          style={{ width: iconWidth, height: iconHeight }}\n          source={floatingIcon}\n        />\n      );\n    }\n\n    return <AddIcon width={iconWidth} height={iconHeight} backgroundColor={iconColor} />;\n  };\n\n  reset = () => {\n    const { animated, onClose } = this.props;\n\n    if (animated) {\n      Animated.spring(this.animation, { toValue: 0, useNativeDriver: false }).start();\n      Animated.spring(this.actionsAnimation, { toValue: 0, useNativeDriver: false }).start();\n    }\n    this.updateState(\n      {\n        active: false\n      },\n      () => {\n        if (onClose) {\n          onClose();\n        }\n      }\n    );\n  };\n\n  animateButton = () => {\n    const {\n      overrideWithAction,\n      actions,\n      floatingIcon,\n      animated,\n      dismissKeyboardOnPress,\n      onPressMain,\n      onOpen\n    } = this.props;\n    const { active } = this.state;\n\n    if (dismissKeyboardOnPress) {\n      Keyboard.dismiss();\n    }\n\n    if (overrideWithAction) {\n      this.handlePressItem(actions[0].name);\n\n      return;\n    }\n\n    if (onPressMain) {\n      onPressMain(!active);\n    }\n\n    if (!active) {\n      if (!floatingIcon) {\n        if (animated) {\n          Animated.spring(this.animation, { toValue: 1, useNativeDriver: false }).start();\n        }\n      }\n\n      if (animated) {\n        Animated.spring(this.actionsAnimation, { toValue: 1, useNativeDriver: false }).start();\n\n        // only execute it for the background to prevent extra calls\n        LayoutAnimation.configureNext({\n          duration: 180,\n          create: {\n            type: LayoutAnimation.Types.easeInEaseOut,\n            property: LayoutAnimation.Properties.opacity\n          }\n        });\n      }\n\n      this.updateState(\n        {\n          active: true\n        },\n        () => {\n          if (onOpen) {\n            onOpen();\n          }\n        }\n      );\n    } else {\n      this.reset();\n    }\n  };\n\n  updateState = (nextState, callback) => {\n    const { onStateChange } = this.props;\n    const { active } = this.state;\n\n    this.setState(nextState, () => {\n      if (callback) {\n        callback();\n      }\n      if (onStateChange) {\n        onStateChange({\n          isActive: active\n        });\n      }\n    });\n  };\n\n  handlePressBackdrop = () => {\n    const { onPressBackdrop } = this.props;\n    if (onPressBackdrop) {\n      onPressBackdrop();\n    }\n    this.reset();\n  };\n\n  handlePressItem = itemName => {\n    const { onPressItem } = this.props;\n\n    if (onPressItem) {\n      onPressItem(itemName);\n    }\n\n    this.reset();\n  };\n\n  renderMainButton() {\n    const {\n      // @deprecated in favor of \"color\"\n      buttonColor, // eslint-disable-line\n      buttonSize,\n      color,\n      position,\n      overrideWithAction,\n      animated\n    } = this.props;\n    const { active } = this.state;\n\n    if (buttonColor) {\n      console.warn(\n        'FloatingAction: \"buttonColor\" property was deprecated. Please use \"color\"'\n      );\n    }\n\n    const mainButtonColor = buttonColor || color;\n\n    let animatedVisibleView;\n    let animatedViewStyle;\n\n    if (animated) {\n      animatedVisibleView = {\n        opacity: this.fadeAnimation,\n        transform: [\n          {\n            rotate: this.visibleAnimation.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\"0deg\", \"90deg\"]\n            })\n          },\n          {\n            scale: this.visibleAnimation.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0]\n            })\n          }\n        ]\n      };\n\n      animatedViewStyle = {\n        transform: [\n          {\n            rotate: this.animation.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\"0deg\", \"45deg\"]\n            })\n          }\n        ]\n      };\n\n      if (overrideWithAction) {\n        animatedViewStyle = {};\n      }\n    } else if (active) {\n      animatedVisibleView = {};\n\n      animatedViewStyle = {\n        transform: [\n          {\n            rotate: \"45deg\"\n          }\n        ]\n      };\n    } else {\n      animatedVisibleView = {};\n\n      animatedViewStyle = {\n        transform: [\n          {\n            rotate: \"0deg\"\n          }\n        ]\n      };\n    }\n\n    const Touchable = getTouchableComponent();\n    const propStyles = {\n      backgroundColor: mainButtonColor,\n      bottom: this.mainBottomAnimation // I need to imporove this to run on native thread and not on JS thread\n    };\n\n    if ([\"left\", \"right\"].indexOf(position) > -1) {\n      propStyles[position] = this.distanceToHorizontalEdge;\n    }\n\n    const sizeStyle = {\n      width: buttonSize,\n      height: buttonSize,\n      borderRadius: buttonSize / 2\n    };\n\n    return (\n      <Animated.View\n        style={[\n          styles.buttonContainer,\n          sizeStyle,\n          styles[`${position}Button`],\n          propStyles,\n          animatedVisibleView,\n          this.getShadow()\n        ]}\n        accessible\n        accessibilityLabel=\"Floating Action Button\"\n      >\n        <Touchable\n          {...getRippleProps(mainButtonColor)}\n          style={[styles.button, sizeStyle]}\n          activeOpacity={0.85}\n          onPress={this.animateButton}\n        >\n          <Animated.View\n            style={[styles.buttonTextContainer, sizeStyle, animatedViewStyle]}\n          >\n            {this.getIcon()}\n          </Animated.View>\n        </Touchable>\n      </Animated.View>\n    );\n  }\n\n  renderActions() {\n    const {\n      actions,\n      position,\n      overrideWithAction,\n      distanceToEdge,\n      actionsPaddingTopBottom,\n      animated,\n      tintColor,\n    } = this.props;\n    const { active } = this.state;\n\n    if (!actions || actions.length === 0) {\n      return undefined;\n    }\n\n    if (overrideWithAction) {\n      return null;\n    }\n\n    let animatedActionsStyle;\n\n    if (animated) {\n      animatedActionsStyle = {\n        opacity: this.actionsAnimation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1]\n        })\n      };\n    } else {\n      animatedActionsStyle = { opacity: active ? 1 : 0 };\n    }\n\n    const actionsStyles = [\n      styles.actions,\n      styles[`${position}Actions`],\n      animatedActionsStyle,\n      {\n        bottom: this.actionsBottomAnimation\n      }\n    ];\n\n    if (active) {\n      actionsStyles.push(styles[`${position}ActionsVisible`]);\n    }\n\n    const sortedActions = actions.sort((a, b) => a.position - b.position);\n    return (\n      <Animated.View style={actionsStyles} pointerEvents=\"box-none\">\n        {sortedActions.map(action => {\n          const textColor = action.textColor || action.actionsTextColor;\n          const textBackground =\n            action.textBackground || action.actionsTextBackground;\n          const tintColorIcon =\n            action.tintColor || tintColor || '#fff';\n\n          return (\n            <FloatingActionItem\n              paddingTopBottom={actionsPaddingTopBottom}\n              distanceToEdge={distanceToEdge}\n              key={action.name}\n              textColor={textColor}\n              tintColor={tintColorIcon}\n              textBackground={textBackground}\n              shadow={this.getShadow()}\n              {...action}\n              position={position}\n              active={active}\n              onPress={this.handlePressItem}\n              animated={animated}\n            />\n          );\n        })}\n      </Animated.View>\n    );\n  }\n\n  renderTappableBackground() {\n    const { overlayColor } = this.props;\n\n    // TouchableOpacity don't require a child\n    return (\n      <TouchableOpacity\n        activeOpacity={1}\n        style={[styles.overlay, { backgroundColor: overlayColor }]}\n        onPress={this.handlePressBackdrop}\n      />\n    );\n  }\n\n  render() {\n    const { active, shouldRender } = this.state;\n    const { showBackground, visible } = this.props;\n\n    if (!shouldRender && !visible) {\n      return null;\n    }\n\n    return (\n      <Animated.View\n        pointerEvents=\"box-none\"\n        style={[styles.overlay, { backgroundColor: \"transparent\" }]}\n      >\n        {active && showBackground && this.renderTappableBackground()}\n        {this.renderActions()}\n        {this.renderMainButton()}\n      </Animated.View>\n    );\n  }\n}\n\nFloatingAction.propTypes = {\n  tintColor: PropTypes.string,\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string,\n      icon: PropTypes.any,\n      name: PropTypes.string.isRequired,\n      buttonSize: PropTypes.number,\n      text: PropTypes.string,\n      textBackground: PropTypes.string,\n      textColor: PropTypes.string,\n      component: PropTypes.func,\n      animated: PropTypes.bool,\n      tintColor: PropTypes.string\n    })\n  ),\n  animated: PropTypes.bool,\n  color: PropTypes.string,\n  distanceToEdge: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      vertical: PropTypes.number,\n      horizontal: PropTypes.number\n    })\n  ]),\n  mainVerticalDistance: PropTypes.number,\n  visible: PropTypes.bool,\n  overlayColor: PropTypes.string,\n  position: PropTypes.oneOf([\"right\", \"left\", \"center\"]),\n  overrideWithAction: PropTypes.bool, // replace mainAction with first action from actions\n  floatingIcon: PropTypes.any,\n  showBackground: PropTypes.bool,\n  openOnMount: PropTypes.bool,\n  actionsPaddingTopBottom: PropTypes.number,\n  buttonSize: PropTypes.number,\n  iconHeight: PropTypes.number,\n  iconWidth: PropTypes.number,\n  listenKeyboard: PropTypes.bool,\n  dismissKeyboardOnPress: PropTypes.bool,\n  shadow: PropTypes.shape({\n    shadowOpacity: PropTypes.number,\n    shadowOffset: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    shadowColor: PropTypes.string,\n    shadowRadius: PropTypes.number\n  }),\n  onPressItem: PropTypes.func,\n  onPressMain: PropTypes.func,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  onPressBackdrop: PropTypes.func,\n  onStateChange: PropTypes.func\n};\n\nFloatingAction.defaultProps = {\n  dismissKeyboardOnPress: false,\n  listenKeyboard: false,\n  actionsPaddingTopBottom: 8,\n  overrideWithAction: false,\n  visible: true,\n  color: \"#1253bc\",\n  overlayColor: \"rgba(68, 68, 68, 0.6)\",\n  position: \"right\",\n  distanceToEdge: 30,\n  openOnMount: false,\n  showBackground: true,\n  buttonSize: 56,\n  iconHeight: 15,\n  iconWidth: 15,\n  iconColor: '#fff',\n  mainVerticalDistance: 0,\n  animated: true,\n  shadow: {}\n};\n\nconst styles = StyleSheet.create({\n  actions: {\n    position: \"absolute\",\n    bottom: 85,\n    zIndex: 10\n  },\n  rightActions: {\n    alignItems: \"flex-end\",\n    right: -1000 // this magic number will make always disspear the text from screen\n  },\n  leftActions: {\n    alignItems: \"flex-start\",\n    left: -1000 // this magic number will make always disspear the text from screen\n  },\n  centerActions: {\n    left: -1000\n  },\n  rightActionsVisible: {\n    right: 0\n  },\n  leftActionsVisible: {\n    left: 0\n  },\n  centerActionsVisible: {\n    left: DEVICE_WIDTH / 2 - 30\n  },\n  overlay: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    elevation: 0,\n    zIndex: 0\n  },\n  buttonContainer: {\n    overflow: Platform.OS === \"ios\" ? \"visible\" : \"hidden\",\n    zIndex: 2,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 5,\n    position: \"absolute\"\n  },\n  button: {\n    zIndex: 3,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  rightButton: {},\n  leftButton: {},\n  centerButton: {\n    left: DEVICE_WIDTH / 2 - 28\n  },\n  buttonTextContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n\nexport default FloatingAction;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}