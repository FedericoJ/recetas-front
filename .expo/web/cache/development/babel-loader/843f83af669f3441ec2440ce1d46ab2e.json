{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Heading, VStack, FormControl, Input, Button, Center, NativeBaseProvider, ScrollView } from \"native-base\";\nimport config from \"../config/default.json\";\nimport axios from 'axios';\nimport { useNavigation } from '@react-navigation/native';\nimport { ButtonFondoBlanco, ButtonFondoRosa, ButtonFondoBlancoModal, ButtonFondoRosaModal } from \"../components/ButtonsLogin\";\nimport Box from '@mui/material/Box';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ModalPoup = function ModalPoup(_ref) {\n  var visible = _ref.visible,\n      children = _ref.children;\n\n  var _React$useState = React.useState(visible),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showModal = _React$useState2[0],\n      setShowModal = _React$useState2[1];\n\n  React.useEffect(function () {\n    toggleModal();\n  }, [visible]);\n\n  var toggleModal = function toggleModal() {\n    if (visible) {\n      setShowModal(true);\n    } else {\n      setShowModal(false);\n    }\n\n    ;\n  };\n\n  return _jsx(Modal, {\n    transparent: true,\n    visible: showModal,\n    children: _jsx(View, {\n      style: styles.modalBackGround,\n      children: _jsx(View, {\n        style: [styles.modalContainer],\n        children: children\n      })\n    })\n  });\n};\n\nvar CambiarContraseniaScreen = function CambiarContraseniaScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Password2 = _useState4[0],\n      setPassword2 = _useState4[1];\n\n  return _jsxs(Center, {\n    w: \"100%\",\n    children: [_jsx(View, {\n      maxW: \"400\",\n      h: \"600\",\n      style: styles.scrollView,\n      _contentContainerStyle: {\n        px: \"20px\",\n        mb: \"4\",\n        minW: \"72\"\n      },\n      children: _jsxs(Box, {\n        safeArea: true,\n        p: \"2\",\n        w: \"100%\",\n        maxW: \"290\",\n        py: \"8\",\n        children: [_jsx(Center, {\n          children: _jsx(Heading, {\n            size: \"lg\",\n            color: \"coolGray.800\",\n            _dark: {\n              color: \"warmGray.50\"\n            },\n            fontWeight: \"semibold\",\n            fontSize: \"25\",\n            children: \"Cambiar Contrase\\xF1a\"\n          })\n        }), _jsxs(VStack, {\n          space: 3,\n          mt: \"5\",\n          children: [_jsxs(FormControl, {\n            isRequired: true,\n            children: [_jsx(FormControl.Label, {\n              children: \"Contrase\\xF1a\"\n            }), _jsx(Input, {\n              value: Password,\n              onChangeText: setPassword\n            })]\n          }), _jsxs(FormControl, {\n            isRequired: true,\n            children: [_jsx(FormControl.Label, {\n              children: \"Repetir Contrase\\xF1a\"\n            }), _jsx(Input, {\n              value: Password2,\n              onChangeText: setPassword2\n            })]\n          }), _jsx(ButtonFondoRosa, {\n            text: \"Guardar\",\n            onPress: function onPress() {\n              navigation.navigate('Perfil');\n              setVisible(false);\n            }\n          }), _jsx(ButtonFondoBlancoModal, {\n            text: \"Cancelar\",\n            onPress: function onPress() {\n              return navigation.navigate('Perfil');\n            }\n          })]\n        })]\n      })\n    }), _jsxs(ModalPoup, {\n      visible: visible,\n      children: [_jsxs(View, {\n        style: {\n          alignItems: 'flex-start'\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 20,\n            color: \"black\"\n          },\n          children: \" Calificaci\\xF3n \"\n        }), _jsx(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginTop: '2%',\n            marginBottom: '2%',\n            marginHorizontal: '5%'\n          }\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginTop: '1%',\n          marginBottom: '1%',\n          marginHorizontal: '1%'\n        },\n        children: [_jsx(ButtonFondoRosaModal, {\n          text: \"Guardar\",\n          onPress: function onPress() {\n            navigation.navigate('Perfil');\n            setVisible(false);\n          }\n        }), _jsx(ButtonFondoBlancoModal, {\n          text: \"Cancelar\",\n          onPress: function onPress() {\n            return navigation.navigate('Perfil');\n          }\n        })]\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  centerContent: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  scrollView: {\n    marginHorizontal: 1,\n    marginVertical: 1\n  },\n  text: {\n    fontSize: 42\n  },\n  container: {\n    padding: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(CambiarContraseniaScreen, {})\n  });\n});","map":{"version":3,"names":["React","useState","useEffect","Heading","VStack","FormControl","Input","Button","Center","NativeBaseProvider","ScrollView","config","axios","useNavigation","ButtonFondoBlanco","ButtonFondoRosa","ButtonFondoBlancoModal","ButtonFondoRosaModal","Box","ModalPoup","visible","children","showModal","setShowModal","toggleModal","styles","modalBackGround","modalContainer","CambiarContraseniaScreen","navigation","Password","setPassword","Password2","setPassword2","scrollView","px","mb","minW","color","navigate","setVisible","alignItems","fontSize","flexDirection","marginTop","marginBottom","marginHorizontal","StyleSheet","create","centerContent","justifyContent","marginVertical","text","container","padding"],"sources":["C:/Users/German/recetas-front/src/screens/CambiarContraseniaScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { \r\n  Heading,\r\n  VStack, \r\n  FormControl, \r\n  Input, \r\n  Button, \r\n  Center, \r\n  NativeBaseProvider, \r\n  ScrollView} from \"native-base\";\r\n  import config from \"../config/default.json\";\r\n  import axios from 'axios'\r\n  import { useNavigation } from '@react-navigation/native';\r\n  import {  ButtonFondoBlanco, ButtonFondoRosa,ButtonFondoBlancoModal, ButtonFondoRosaModal } from '../components/ButtonsLogin';\r\n  import Box from '@mui/material/Box';\r\n\r\n\r\n  const ModalPoup = ({visible, children}) => {\r\n    const [showModal, setShowModal] = React.useState(visible);\r\n    React.useEffect(() => {\r\n        toggleModal();\r\n    },[visible])\r\n    const toggleModal = () =>{\r\n        if(visible){\r\n            setShowModal(true);\r\n        }\r\n        else {setShowModal(false)};\r\n    }\r\n    \r\n    return <Modal transparent visible={showModal}>\r\n        <View style={styles.modalBackGround}>\r\n            <View style={[styles.modalContainer]}>\r\n                {children}\r\n            </View>\r\n        </View>\r\n    </Modal>;\r\n\r\n};\r\n  \r\n  const CambiarContraseniaScreen = () => {\r\n\r\n    const navigation = useNavigation();\r\n    const [ Password    , setPassword] = useState(\"\");\r\n    const [ Password2    , setPassword2] = useState(\"\");\r\n     \r\n\r\n  return <Center w=\"100%\">\r\n     <View maxW=\"400\" h=\"600\" style={styles.scrollView} _contentContainerStyle={{\r\n      px: \"20px\",\r\n      mb: \"4\",\r\n      minW: \"72\"\r\n    }}>\r\n      <Box safeArea p=\"2\"  w=\"100%\" maxW=\"290\" py=\"8\">\r\n        <Center>  \r\n        <Heading size=\"lg\" color=\"coolGray.800\" _dark={{\r\n        color: \"warmGray.50\"\r\n      }} fontWeight=\"semibold\" fontSize=\"25\">\r\n          Cambiar Contrase침a\r\n        </Heading>\r\n        </Center>\r\n        <VStack space={3} mt=\"5\">\r\n        <FormControl isRequired>\r\n            <FormControl.Label>Contrase침a</FormControl.Label>\r\n            <Input \r\n              value={Password}\r\n              onChangeText={setPassword}/>\r\n          </FormControl>\r\n          <FormControl isRequired >\r\n            <FormControl.Label>Repetir Contrase침a</FormControl.Label>\r\n            <Input \r\n              value={Password2}\r\n              onChangeText={setPassword2}\r\n            />\r\n        </FormControl>\r\n        <ButtonFondoRosa text=\"Guardar\"onPress={() => { navigation.navigate('Perfil');setVisible(false); }}/>\r\n        <ButtonFondoBlancoModal text=\"Cancelar\" onPress={() => navigation.navigate('Perfil')}/>\r\n\r\n        </VStack>\r\n      </Box>\r\n      </View>\r\n      <ModalPoup visible = {visible}>\r\n                <View style = {{alignItems: 'flex-start'}}>\r\n                    <Text style={{fontSize:20, color:\"black\"}}> Calificaci칩n </Text>\r\n                    <View style={{flexDirection:\"row\" , alignItems:\"center\", marginTop:'2%', marginBottom:'2%', marginHorizontal:'5%'}}>\r\n                    {/* asigno espacio */}\r\n\r\n                     </View>\r\n                </View>\r\n                \r\n                <View style={{flexDirection:\"row\" , alignItems:\"center\", marginTop:'1%', marginBottom:'1%', marginHorizontal:'1%'}}>\r\n\r\n                <ButtonFondoRosaModal text=\"Guardar\"onPress={() => { navigation.navigate('Perfil');setVisible(false); }}/>\r\n                <ButtonFondoBlancoModal text=\"Cancelar\" onPress={() => navigation.navigate('Perfil')}/>\r\n\r\n                </View> \r\n\r\n            </ModalPoup>\r\n\r\n    </Center>;\r\n\r\n    \r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n  centerContent: {\r\n    justifyContent:'center',\r\n    alignItems:'center'\r\n  },\r\n\r\n  scrollView: {\r\n    marginHorizontal: 1,\r\n    marginVertical: 1,\r\n  },\r\n  text: {\r\n    fontSize: 42,\r\n  },\r\n  container: {\r\n    padding:50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\n    export default () => {\r\n        return (\r\n          <NativeBaseProvider>\r\n                <CambiarContraseniaScreen />\r\n          </NativeBaseProvider>\r\n        );\r\n    };\r\n    "],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SACEC,OADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,kBAPF,EAQEC,UARF,QAQmB,aARnB;AASE,OAAOC,MAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAAUC,iBAAV,EAA6BC,eAA7B,EAA6CC,sBAA7C,EAAqEC,oBAArE;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAyB;EAAA,IAAvBC,OAAuB,QAAvBA,OAAuB;EAAA,IAAdC,QAAc,QAAdA,QAAc;;EACzC,sBAAkCrB,KAAK,CAACC,QAAN,CAAemB,OAAf,CAAlC;EAAA;EAAA,IAAOE,SAAP;EAAA,IAAkBC,YAAlB;;EACAvB,KAAK,CAACE,SAAN,CAAgB,YAAM;IAClBsB,WAAW;EACd,CAFD,EAEE,CAACJ,OAAD,CAFF;;EAGA,IAAMI,WAAW,GAAG,SAAdA,WAAc,GAAK;IACrB,IAAGJ,OAAH,EAAW;MACPG,YAAY,CAAC,IAAD,CAAZ;IACH,CAFD,MAGK;MAACA,YAAY,CAAC,KAAD,CAAZ;IAAoB;;IAAA;EAC7B,CALD;;EAOA,OAAO,KAAC,KAAD;IAAO,WAAW,MAAlB;IAAmB,OAAO,EAAED,SAA5B;IAAA,UACH,KAAC,IAAD;MAAM,KAAK,EAAEG,MAAM,CAACC,eAApB;MAAA,UACI,KAAC,IAAD;QAAM,KAAK,EAAE,CAACD,MAAM,CAACE,cAAR,CAAb;QAAA,UACKN;MADL;IADJ;EADG,EAAP;AAQH,CApBC;;AAsBA,IAAMO,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;EAErC,IAAMC,UAAU,GAAGhB,aAAa,EAAhC;;EACA,gBAAqCZ,QAAQ,CAAC,EAAD,CAA7C;EAAA;EAAA,IAAQ6B,QAAR;EAAA,IAAsBC,WAAtB;;EACA,iBAAuC9B,QAAQ,CAAC,EAAD,CAA/C;EAAA;EAAA,IAAQ+B,SAAR;EAAA,IAAuBC,YAAvB;;EAGF,OAAO,MAAC,MAAD;IAAQ,CAAC,EAAC,MAAV;IAAA,WACJ,KAAC,IAAD;MAAM,IAAI,EAAC,KAAX;MAAiB,CAAC,EAAC,KAAnB;MAAyB,KAAK,EAAER,MAAM,CAACS,UAAvC;MAAmD,sBAAsB,EAAE;QAC1EC,EAAE,EAAE,MADsE;QAE1EC,EAAE,EAAE,GAFsE;QAG1EC,IAAI,EAAE;MAHoE,CAA3E;MAAA,UAKC,MAAC,GAAD;QAAK,QAAQ,MAAb;QAAc,CAAC,EAAC,GAAhB;QAAqB,CAAC,EAAC,MAAvB;QAA8B,IAAI,EAAC,KAAnC;QAAyC,EAAE,EAAC,GAA5C;QAAA,WACE,KAAC,MAAD;UAAA,UACA,KAAC,OAAD;YAAS,IAAI,EAAC,IAAd;YAAmB,KAAK,EAAC,cAAzB;YAAwC,KAAK,EAAE;cAC/CC,KAAK,EAAE;YADwC,CAA/C;YAEC,UAAU,EAAC,UAFZ;YAEuB,QAAQ,EAAC,IAFhC;YAAA;UAAA;QADA,EADF,EAQE,MAAC,MAAD;UAAQ,KAAK,EAAE,CAAf;UAAkB,EAAE,EAAC,GAArB;UAAA,WACA,MAAC,WAAD;YAAa,UAAU,MAAvB;YAAA,WACI,KAAC,WAAD,CAAa,KAAb;cAAA;YAAA,EADJ,EAEI,KAAC,KAAD;cACE,KAAK,EAAER,QADT;cAEE,YAAY,EAAEC;YAFhB,EAFJ;UAAA,EADA,EAOE,MAAC,WAAD;YAAa,UAAU,MAAvB;YAAA,WACE,KAAC,WAAD,CAAa,KAAb;cAAA;YAAA,EADF,EAEE,KAAC,KAAD;cACE,KAAK,EAAEC,SADT;cAEE,YAAY,EAAEC;YAFhB,EAFF;UAAA,EAPF,EAcA,KAAC,eAAD;YAAiB,IAAI,EAAC,SAAtB;YAA+B,OAAO,EAAE,mBAAM;cAAEJ,UAAU,CAACU,QAAX,CAAoB,QAApB;cAA8BC,UAAU,CAAC,KAAD,CAAV;YAAoB;UAAlG,EAdA,EAeA,KAAC,sBAAD;YAAwB,IAAI,EAAC,UAA7B;YAAwC,OAAO,EAAE;cAAA,OAAMX,UAAU,CAACU,QAAX,CAAoB,QAApB,CAAN;YAAA;UAAjD,EAfA;QAAA,EARF;MAAA;IALD,EADI,EAkCH,MAAC,SAAD;MAAW,OAAO,EAAInB,OAAtB;MAAA,WACU,MAAC,IAAD;QAAM,KAAK,EAAI;UAACqB,UAAU,EAAE;QAAb,CAAf;QAAA,WACI,KAAC,IAAD;UAAM,KAAK,EAAE;YAACC,QAAQ,EAAC,EAAV;YAAcJ,KAAK,EAAC;UAApB,CAAb;UAAA;QAAA,EADJ,EAEI,KAAC,IAAD;UAAM,KAAK,EAAE;YAACK,aAAa,EAAC,KAAf;YAAuBF,UAAU,EAAC,QAAlC;YAA4CG,SAAS,EAAC,IAAtD;YAA4DC,YAAY,EAAC,IAAzE;YAA+EC,gBAAgB,EAAC;UAAhG;QAAb,EAFJ;MAAA,EADV,EASU,MAAC,IAAD;QAAM,KAAK,EAAE;UAACH,aAAa,EAAC,KAAf;UAAuBF,UAAU,EAAC,QAAlC;UAA4CG,SAAS,EAAC,IAAtD;UAA4DC,YAAY,EAAC,IAAzE;UAA+EC,gBAAgB,EAAC;QAAhG,CAAb;QAAA,WAEA,KAAC,oBAAD;UAAsB,IAAI,EAAC,SAA3B;UAAoC,OAAO,EAAE,mBAAM;YAAEjB,UAAU,CAACU,QAAX,CAAoB,QAApB;YAA8BC,UAAU,CAAC,KAAD,CAAV;UAAoB;QAAvG,EAFA,EAGA,KAAC,sBAAD;UAAwB,IAAI,EAAC,UAA7B;UAAwC,OAAO,EAAE;YAAA,OAAMX,UAAU,CAACU,QAAX,CAAoB,QAApB,CAAN;UAAA;QAAjD,EAHA;MAAA,EATV;IAAA,EAlCG;EAAA,EAAP;AAuDD,CA9DC;;AAgEF,IAAMd,MAAM,GAAGsB,UAAU,CAACC,MAAX,CAAkB;EAE/BC,aAAa,EAAE;IACbC,cAAc,EAAC,QADF;IAEbT,UAAU,EAAC;EAFE,CAFgB;EAO/BP,UAAU,EAAE;IACVY,gBAAgB,EAAE,CADR;IAEVK,cAAc,EAAE;EAFN,CAPmB;EAW/BC,IAAI,EAAE;IACJV,QAAQ,EAAE;EADN,CAXyB;EAc/BW,SAAS,EAAE;IACTC,OAAO,EAAC,EADC;IAETb,UAAU,EAAE,QAFH;IAGTS,cAAc,EAAE;EAHP;AAdoB,CAAlB,CAAf;AAqBI,gBAAe,YAAM;EACjB,OACE,KAAC,kBAAD;IAAA,UACM,KAAC,wBAAD;EADN,EADF;AAKH,CAND"},"metadata":{},"sourceType":"module"}